---
import BaseLayout from "../../layouts/BaseLayout.astro";
import NavHeader from "../../components/posts/NavHeader.astro";
import MainLayout from "../../layouts/MainLayout.astro";

const techStacks = [
  {
    title: "Next.js",
    description: "React 기반의 풀스택 웹 프레임워크",
    path: "/learn/next.js",
    icon: `<svg height="32" viewBox="0 0 180 180" fill="none" xmlns="http://www.w3.org/2000/svg">
            <mask id="mask0_408_134" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="180" height="180">
              <circle cx="90" cy="90" r="90" fill="currentColor"/>
            </mask>
            <g mask="url(#mask0_408_134)">
              <circle cx="90" cy="90" r="90" fill="currentColor"/>
              <path d="M149.508 157.52L69.142 54H54V125.97H66.1136V69.3836L139.999 164.845C143.333 162.614 146.509 160.165 149.508 157.52Z" fill="white"/>
              <rect x="115" y="54" width="12" height="72" fill="white"/>
            </g>
          </svg>`,
  },
  {
    title: "Swift/SwiftUI",
    description: "Apple의 모던한 UI 프레임워크",
    path: "/learn/swift",
    icon: `<img src="/swift-logo.png" alt="Swift Logo" height="32" />`,
  },
];
---

<BaseLayout>
  <NavHeader />
  <MainLayout title="학교" description="배움의 공간">
    <div class="tech-grid">
      {
        techStacks.map((tech) => (
          <a href={tech.path} class="card-link">
            <div class="card">
              <div class="card-content">
                <div class="glow" />
                <div class="card-inner">
                  <div class="icon" set:html={tech.icon} />
                  <h2 class="card-title">{tech.title}</h2>
                  <p class="description">{tech.description}</p>
                </div>
              </div>
            </div>
          </a>
        ))
      }
    </div>
  </MainLayout>
</BaseLayout>

<style>
  .tech-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 1.2rem;
    padding: 1.5rem 1rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  @media (min-width: 768px) {
    .tech-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .tech-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .card-link {
    text-decoration: none;
    color: inherit;
  }

  .card {
    position: relative;
    border-radius: 1rem;
    height: 180px;
    overflow: hidden;
    background: var(--theme-card);
    box-shadow:
      0 4px 12px rgba(0, 0, 0, 0.1),
      0 2px 4px rgba(0, 0, 0, 0.08),
      0 8px 16px rgba(0, 0, 0, 0.06);
    transition:
      transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1),
      box-shadow 0.4s ease;
  }

  :global(.dark) .card {
    box-shadow: none;
  }

  .card::before,
  .card::after {
    content: "";
    position: absolute;
    inset: 0;
    background: radial-gradient(
      300px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(255, 255, 255, 0.1),
      transparent 60%
    );
    opacity: 0;
    transition: opacity 0.8s cubic-bezier(0.22, 1, 0.36, 1);
    will-change: opacity;
    pointer-events: none;
  }

  .card::after {
    background: radial-gradient(
      300px circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      var(--theme-accent),
      transparent 70%
    );
    z-index: 1;
    mix-blend-mode: soft-light;
    opacity: 0;
  }

  .card:hover::before,
  .card:hover::after {
    opacity: 1; /* 카드 위로 마우스 올라간 동안만 보여줌 */
  }

  .card-content {
    position: relative;
    height: 100%;
    padding: 1.25rem;
    background: rgba(255, 255, 255, 0.03);
    border-radius: 1rem;
    overflow: hidden;
    backdrop-filter: blur(10px);
    z-index: 2;
    transition: all 0.8s cubic-bezier(0.22, 1, 0.36, 1);
    will-change: transform, box-shadow;
  }

  .glow {
    position: absolute;
    inset: -1px;
    background: linear-gradient(90deg, var(--theme-accent), transparent 20%, transparent 80%, var(--theme-accent));
    opacity: 0;
    transition: all 0.8s cubic-bezier(0.22, 1, 0.36, 1);
    will-change: opacity, transform;
  }

  .card:hover .glow {
    opacity: 0.2;
    animation: glow-rotate 4s linear infinite;
  }

  @keyframes glow-rotate {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  .card-inner {
    position: relative;
    z-index: 3;
  }

  .icon {
    margin-bottom: 0.75rem;
    transition: all 0.8s cubic-bezier(0.22, 1, 0.36, 1);
    will-change: transform;
    color: var(--theme-text);
  }

  .icon svg {
    width: auto;
    height: 32px;
  }

  .card-title {
    font-size: 1.125rem;
    font-weight: 600;
    margin-bottom: 0.375rem;
    color: var(--theme-text);
    transition: all 0.8s cubic-bezier(0.22, 1, 0.36, 1);
    will-change: transform;
  }

  .description {
    font-size: 0.875rem;
    color: var(--theme-text-light);
    line-height: 1.4;
    transition: all 0.8s cubic-bezier(0.22, 1, 0.36, 1);
    will-change: transform;
  }

  .card:hover {
    transform: translateY(-6px);
    box-shadow:
      0 12px 24px rgba(0, 0, 0, 0.15),
      0 8px 16px rgba(0, 0, 0, 0.12),
      0 16px 32px rgba(0, 0, 0, 0.1);
  }

  :global(.dark) .card:hover {
    transform: translateY(-6px);
    box-shadow: none;
  }
</style>
